pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = 'github-credentials' // Replace with your GitHub credentials ID
        DOCKER_CREDENTIALS = 'github-credentials' // Replace with your Docker Hub credentials ID
        DOCKER_IMAGE = 'ghcr.io/mankinndjnr/alx-message-app' // Replace with your Docker Hub repository name
        DOCKER_TAG = 'latest' // Tag for the Docker image
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main',
                    credentialsId: env.GITHUB_CREDENTIALS,
                    url: 'https://github.com/mankindjnr/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip install -r requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'pytest --junitxml=report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                    docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh """
                    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                    docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                    docker logout
                    """
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'report.xml', fingerprint: true
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
